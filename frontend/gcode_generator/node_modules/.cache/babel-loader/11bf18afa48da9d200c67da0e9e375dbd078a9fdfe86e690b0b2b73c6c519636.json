{"ast":null,"code":"var _jsxFileName = \"D:\\\\Eng Software\\\\8 FASE\\\\ProjetoTcc\\\\frontend\\\\gcode_generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para armazenar o G-code gerado\n  const [gCode, setGCode] = useState('');\n\n  // Referência para o input de arquivo escondido\n  const fileInputRef = useRef(null);\n\n  // Função chamada quando um arquivo é selecionado\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n\n    // Se nenhum arquivo for selecionado, não faz nada\n    if (!file) {\n      return;\n    }\n    console.log(\"Arquivo selecionado:\", file.name);\n\n    // --- SIMULAÇÃO DO SEU TCC ---\n    // No seu projeto real, aqui você faria a lógica de\n    // enviar o 'file' para um backend (ou um processamento no frontend\n    // com alguma biblioteca de Visão Computacional) para análise.\n    //\n    // O backend processaria a imagem e retornaria o G-code como texto.\n    //\n    // Para este exemplo, vamos apenas simular um retorno de G-code:\n    const simulatedGCode = `(Código G-code gerado para: ${file.name})\nG21 ; Define unidades para milímetros\nG90 ; Define modo de coordenada absoluta\nM03 S1200 ; Liga o spindle a 1200 RPM\nG00 Z5.0 ; Move rápido para a altura de segurança\nG00 X10 Y10 ; Move para o ponto inicial (X:10, Y:10)\nG01 Z-1.0 F100 ; Mergulha no material\nG01 X50 Y10 F500 ; Corta uma linha reta\nG01 X50 Y50\nG01 X10 Y50\nG01 X10 Y10\nG00 Z5.0 ; Retrai a ferramenta\nM05 ; Desliga o spindle\nM30 ; Fim do programa`;\n\n    // Atualiza o estado com o G-code simulado\n    setGCode(simulatedGCode);\n  };\n\n  // Função para acionar o clique no input de arquivo\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"G-code Automator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleButtonClick,\n        children: \"Escolher Imagem (PNG/JPG)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        accept: \".png, .jpeg, .jpg\" // Restringe para PNG e JPEG\n        ,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"gcode-textarea\",\n        value: gCode,\n        readOnly: true,\n        placeholder: \"O c\\xF3digo G-code gerado aparecer\\xE1 aqui...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0UsKgucvT1Q73+khY2dIESlq+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","gCode","setGCode","fileInputRef","handleFileChange","event","file","target","files","console","log","name","simulatedGCode","handleButtonClick","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","ref","onChange","accept","style","display","value","readOnly","placeholder","_c","$RefreshReg$"],"sources":["D:/Eng Software/8 FASE/ProjetoTcc/frontend/gcode_generator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Estado para armazenar o G-code gerado\n  const [gCode, setGCode] = useState('');\n  \n  // Referência para o input de arquivo escondido\n  const fileInputRef = useRef(null);\n\n  // Função chamada quando um arquivo é selecionado\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    \n    // Se nenhum arquivo for selecionado, não faz nada\n    if (!file) {\n      return;\n    }\n\n    console.log(\"Arquivo selecionado:\", file.name);\n\n    // --- SIMULAÇÃO DO SEU TCC ---\n    // No seu projeto real, aqui você faria a lógica de\n    // enviar o 'file' para um backend (ou um processamento no frontend\n    // com alguma biblioteca de Visão Computacional) para análise.\n    //\n    // O backend processaria a imagem e retornaria o G-code como texto.\n    //\n    // Para este exemplo, vamos apenas simular um retorno de G-code:\n    const simulatedGCode = `(Código G-code gerado para: ${file.name})\nG21 ; Define unidades para milímetros\nG90 ; Define modo de coordenada absoluta\nM03 S1200 ; Liga o spindle a 1200 RPM\nG00 Z5.0 ; Move rápido para a altura de segurança\nG00 X10 Y10 ; Move para o ponto inicial (X:10, Y:10)\nG01 Z-1.0 F100 ; Mergulha no material\nG01 X50 Y10 F500 ; Corta uma linha reta\nG01 X50 Y50\nG01 X10 Y50\nG01 X10 Y10\nG00 Z5.0 ; Retrai a ferramenta\nM05 ; Desliga o spindle\nM30 ; Fim do programa`;\n    \n    // Atualiza o estado com o G-code simulado\n    setGCode(simulatedGCode);\n  };\n\n  // Função para acionar o clique no input de arquivo\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h1>G-code Automator</h1>\n      </header>\n      \n      <main className=\"content\">\n        {/* Este é o botão que o usuário vê */}\n        <button className=\"upload-button\" onClick={handleButtonClick}>\n          Escolher Imagem (PNG/JPG)\n        </button>\n\n        {/* Este é o input de arquivo real, mas está escondido */}\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n          accept=\".png, .jpeg, .jpg\" // Restringe para PNG e JPEG\n          style={{ display: 'none' }} \n        />\n\n        {/* Esta é a caixa de texto para exibir o G-code */}\n        <textarea\n          className=\"gcode-textarea\"\n          value={gCode}\n          readOnly\n          placeholder=\"O código G-code gerado aparecerá aqui...\"\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;IAElC;IACA,IAAI,CAACF,IAAI,EAAE;MACT;IACF;IAEAG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,IAAI,CAACK,IAAI,CAAC;;IAE9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,cAAc,GAAG,+BAA+BN,IAAI,CAACK,IAAI;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;IAElB;IACAT,QAAQ,CAACU,cAAc,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BV,YAAY,CAACW,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAQkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBnB,OAAA;QAAAmB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAETvB,OAAA;MAAMkB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAEvBnB,OAAA;QAAQkB,SAAS,EAAC,eAAe;QAACM,OAAO,EAAET,iBAAkB;QAAAI,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGTvB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,GAAG,EAAErB,YAAa;QAClBsB,QAAQ,EAAErB,gBAAiB;QAC3BsB,MAAM,EAAC,mBAAmB,CAAC;QAAA;QAC3BC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAGFvB,OAAA;QACEkB,SAAS,EAAC,gBAAgB;QAC1Ba,KAAK,EAAE5B,KAAM;QACb6B,QAAQ;QACRC,WAAW,EAAC;MAA0C;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrB,EAAA,CAjFQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAmFZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}